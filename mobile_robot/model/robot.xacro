<?xml version="1.0"?>

<robot name="differential_drive_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!--Pi Constant-->
<xacro:property name="pi_const" value="3.14159265"/>

<!--Body Dimensions-->
<xacro:property name="a" value="1"/>
<xacro:property name="b" value="0.3"/>
<xacro:property name="c" value="0.6"/>

<!--Wheel and Caster Dimensions-->

<!--Wheel and Caster Radius-->
<xacro:property name="r" value="0.15"/>

<!--Wheel Width-->
<xacro:property name="d" value="0.1"/>

<xacro:property name="s1" value="${b/2+r}"/>
<xacro:property name="s2" value="${2*r}"/>
<xacro:property name="s3" value="${2*r}"/>
<xacro:property name="s4" value="${c/2+d/2}"/>



<!--Volume, Mass and Moments of Inertia-->

<!--Material Density-->
<!--Body (d1), Wheels (d2) and Caster (d3) Material Density-->
<xacro:property name="d1" value="2710.0"/>
<xacro:property name="d2" value="2710.0"/>
<xacro:property name="d3" value="2710.0"/>


<!--Robot Mass-->
<!--Body Mass-->
<xacro:property name="m1" value="${d1*a*b*c}"/>
<!--Wheel Mass-->
<xacro:property name="m2" value="${d2*pi_const*r*r*d}"/>
<!--Caster Mass-->
<xacro:property name="m3" value="${d3*(4.0/3.0)*pi_const*r*r*r}"/>


<!--Moments of Inertia-->
<!--Moments of Inertia of Robot Body-->
<xacro:property name="Ix_body" value="${(1/12)*m1*(b*b+c*c)}"/>
<xacro:property name="Iy_body" value="${(1/12)*m1*(b*b+a*a)}"/>
<xacro:property name="Iz_body" value="${(1/12)*m1*(a*a+c*c)}"/>
<!--Moments of Inertia of Wheel-->
<xacro:property name="I_wheel" value="${(1/12)*m2*(3*r*r+d*d)}"/>
<xacro:property name="Iz_wheel" value="${(1/2)*m2*r*r}"/>
<!--Moments of Inertia of Caster-->
<xacro:property name="I_caster" value="${(2/5)*m3*r*r}"/>

<!--This macro defines the complete inertial section of the robot body-->
<!--It is used later in the code-->
<xacro:macro name="inertia_body">
    <inertial>
        <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 ${s1}" />
        <mass value="${m1}"/>
        <inertia ixx="${Ix_body}" ixy="0.0" ixz="0.0" iyy="${Iy_body}" iyz="0" izz="${Iz_body}"/>
    </inertial>
</xacro:macro>

<!--This macro defines the complete inertial section of the robot wheel-->
<!--It is used later in the code-->
<xacro:macro name="inertia_wheel">
    <inertial>
        <origin rpy="1.570795 0.0 0.0" xyz="0.0 0.0 0.0" />
        <mass value="${m2}"/>
        <inertia ixx="${I_wheel}" ixy="0.0" ixz="0.0" iyy="${I_wheel}" iyz="0" izz="${Iz_wheel}"/>
    </inertial>
</xacro:macro>

<!--This macro defines the complete inertial section of the robot caster-->
<!--It is used later in the code-->
<xacro:macro name="inertia_caster">
    <inertial>
        <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
        <mass value="${m3}"/>
        <inertia ixx="${I_caster}" ixy="0.0" ixz="0.0" iyy="${I_caster}" iyz="0" izz="${I_caster}"/>
    </inertial>
</xacro:macro>


<!--Additional Files-->
<!--We include the file that defines extra gazebo options and motion control driver-->
<xacro:include filename="$(find mobile_robot)/model/robot.gazebo"/>

<!--LINKS, JOINTS-->

<!--Fictious Link of the robot-->
<!--We need to have this link otherwise Gazebo will complain-->
<link name="base_footprint"></link>
<joint name="body_link_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="body_link"/>
</joint>


<!--Body Link of the Robot-->
<link name="body_link">
    <visual>
        <geometry>
            <box size="${a} ${c} ${b}"/>
        </geometry>
    <!--Displacement and orientation of the geometric center of the link with respect to parent link-->    
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 ${s1}" />
    </visual>

    <collision>
        <geometry>
            <box size="${a} ${c} ${b}"/>
        </geometry>
        <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 ${s1}" />
    </collision>

    <xacro:inertia_body/>
</link>

<!--Wheel1 Link (Back right wheel)-->
<joint name="wheel1_joint" type="continuous">
    <parent link="body_link"/>
    <child link="wheel1_link"/>
    <origin xyz="${-s2} ${-s4} ${r}" rpy="0.0 0.0 0.0"/>
    <axis xyz="0.0 1.0 0.0"/>
    <limit effort="50000" velocity="10.0"/>
    <dynamics damping="1.0" friction="1.0"/>
</joint>

<link name="wheel1_link">
    <visual>
        <origin xyz="0.0 0.0 0.0" rpy="1.570797 0.0 0.0"/>
        <geometry>
            <cylinder radius="${r}" length="${d}"/>
        </geometry>
    </visual>

    <collision>
        <origin xyz="0.0 0.0 0.0" rpy="1.570797 0.0 0.0"/>
        <geometry>
            <cylinder radius="${r}" length="${d}"/>
        </geometry>
    </collision>

    <xacro:inertia_wheel/>
</link>

<!--Wheel2 Link (Back left wheel)-->
<joint name="wheel2_joint" type="continuous">
    <parent link="body_link"/>
    <child link="wheel2_link"/>
    <origin xyz="${-s2} ${s4} ${r}" rpy="0.0 0.0 0.0"/>
    <axis xyz="0.0 1.0 0.0"/>
    <limit effort="50000" velocity="10.0"/>
    <dynamics damping="1.0" friction="1.0"/>
</joint>

<link name="wheel2_link">
    <visual>
        <origin xyz="0.0 0.0 0.0" rpy="1.570797 0.0 0.0"/>
        <geometry>
            <cylinder radius="${r}" length="${d}"/>
        </geometry>
    </visual>

    <collision>
        <origin xyz="0.0 0.0 0.0" rpy="1.570797 0.0 0.0"/>
        <geometry>
            <cylinder radius="${r}" length="${d}"/>
        </geometry>
    </collision>

    <xacro:inertia_wheel/>
</link>

<!--Caster Wheel Link-->
<joint name="caster_joint" type="fixed">
    <parent link="body_link"/>
    <child link="caster_link"/>
    <origin xyz="${s3} 0.0 ${r}" rpy="0.0 0.0 0.0"/>    
</joint>

<link name="caster_link">
    <visual>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <geometry>
            <sphere radius="${r}"/>
        </geometry>
    </visual>

    <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <geometry>
            <sphere radius="${r}"/>
        </geometry>
    </collision>

    <xacro:inertia_caster/>
</link>




</robot>